name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  version-control-and-ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  compile:
    needs: version-control-and-ci
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Compile code
        run: |
          echo "Compilação não é necessária ou não configurada."

  tests:
    needs: version-control-and-ci
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run unit tests
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          PASSWORD: ${{ secrets.PASSWORD }}
          NEW_PASSWORD: ${{ secrets.NEW_PASSWORD }}
        run: |
          python -m unittest discover -s test -p '*_test.py'

  bandit:
    needs: version-control-and-ci
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install bandit

      - name: Run Bandit
        run: |
          bandit -r . -o bandit-report.html || true

      - name: List files
        run: |
          ls -l

      - name: Upload Bandit report
        uses: actions/upload-artifact@v3
        with:
          name: bandit-report
          path: bandit-report.html

  dependency-check:
    needs: version-control-and-ci
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install OWASP Dependency Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v10.0.4/dependency-check-10.0.4-release.zip
          unzip dependency-check-10.0.4-release.zip
          sudo mv dependency-check/bin/dependency-check.sh /usr/local/bin/dependency-check

      - name: Run OWASP Dependency Check
        run: |
          mkdir -p report
          dependency-check --project "Task-Manager-using-Flask" --scan . --out report || true

      - name: List current directory
        run: |
          ls -l

      - name: List report directory
        run: |
          ls -l ./report

      - name: Upload OWASP Dependency Check reports
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: report/*

  security-testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Deploy to Staging
        run: |
          docker build -t task-manager-app .
          docker run -d --name task-manager-staging -p 5000:5000 task-manager-app

      - name: Run OWASP ZAP Security Scan
        run: |
          docker run -t --rm zaproxy/zap-stable zap.sh -quickurl http://localhost:5000 -quickout zap_report.html || true

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build -t task-manager-using-flask .

      - name: Deploy to Staging
        run: |
          docker run -d --name Task-Manager-using-Flask -p 5000:5000 Task-Manager-using-Flask || true